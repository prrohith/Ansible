---
# tasks file for sample
- name: Install java8
  apt:
    name: "{{java_package}}"
    update_cache: yes
    state: present
  when: ansible_facts['distribution']=="Ubuntu"
- name: create group tomcat
  group: 
    name: "{{username}}"
    state: present
  when: ansible_facts['distribution']=="Ubuntu"
- name: create tomcat user
  user: 
    name: "{{username}}"
    group: "{{username}}"
    create_home: yes
    home: "{{tomcat_installation_path}}"
    shell: /bin/false
    state: present
  when: ansible_facts['distribution']=="Ubuntu"
- name: unzip package
  package: 
    name: "{{unzip_package}}"
    state: present
  when: ansible_facts['distribution']=="Ubuntu"
- name: download tomcat
  get_url:
    url: "{{tomcat_download_source}}"
    dest: "{{tomcat_download_location}}"
  when: ansible_facts['distribution']=="Ubuntu"
- name: fetch the stats of the downloaded file
  stat:
    path: "{{tomcat_installation_path}}"
  register: tomcat_download_result  
- name: extract tomcat
  unarchive:
    src: "{{tomcat_download_location}}"
    dest: "{{tomcat_installation_path}}"
    remote_src: yes
  when: ansible_facts['distribution']=="Ubuntu" and not tomcat_download_result.stat.exists
  notify:
    - create symlink
    - give recursive ownership
    - give execute permissions
- name: create service
  template:
    src: tomcat.service.j2
    dest: /etc/systemd/system/tomcat.service
  when: ansible_facts['distribution']=="Ubuntu"
  notify: daemon reload and start tomcat